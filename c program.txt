#include <stdio.h>

double findConstant(double x[], double y[], int n, int k) {
    double constant = 0.0;

    for (int i = 0; i < k; i++) {
        double basis = 1.0;

        // Compute the Lagrange basis polynomial L_i(0)
        for (int j = 0; j < k; j++) {
            if (i != j) {
                basis *= (0.0 - x[j]) / (x[i] - x[j]);
            }
        }

        // Add the contribution of the current term to the constant
        constant += y[i] * basis;
    }

    return constant;
}

int main() {
    int n, k;

    // Input number of points and minimum points required
    printf("Enter the number of points (n): ");
    scanf("%d", &n);

    printf("Enter the minimum number of points required (k): ");
    scanf("%d", &k);

    if (k > n) {
        printf("Error: k cannot be greater than n.\n");
        return 1;
    }

    double x[n], y[n];

    // Input x and y values
    printf("Enter the x and y values:\n");
    for (int i = 0; i < n; i++) {
        printf("Point %d (x, y): ", i + 1);
        scanf("%lf %lf", &x[i], &y[i]);
    }

    // Compute the constant term using Lagrange interpolation
    double constant = findConstant(x, y, n, k);
    printf("The constant term (secret) c is: %.6lf\n", constant);

    return 0;
}